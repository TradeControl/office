#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TradeControl.CashFlow.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="misGreenPrint")]
	public partial class dbTradeControlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public dbTradeControlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTradeControlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTradeControlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTradeControlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vwActivePeriod> vwActivePeriods
		{
			get
			{
				return this.GetTable<vwActivePeriod>();
			}
		}
		
		public System.Data.Linq.Table<vwActiveYear> vwActiveYears
		{
			get
			{
				return this.GetTable<vwActiveYear>();
			}
		}
		
		public System.Data.Linq.Table<vwMonth> vwMonths
		{
			get
			{
				return this.GetTable<vwMonth>();
			}
		}
		
		public System.Data.Linq.Table<vwCategoryTrade> vwCategoryTrades
		{
			get
			{
				return this.GetTable<vwCategoryTrade>();
			}
		}
		
		public System.Data.Linq.Table<vwCategoryBank> vwCategoryBanks
		{
			get
			{
				return this.GetTable<vwCategoryBank>();
			}
		}
		
		public System.Data.Linq.Table<vwCategoryTax> vwCategoryTaxes
		{
			get
			{
				return this.GetTable<vwCategoryTax>();
			}
		}
		
		public System.Data.Linq.Table<vwCategoryTotal> vwCategoryTotals
		{
			get
			{
				return this.GetTable<vwCategoryTotal>();
			}
		}
		
		public System.Data.Linq.Table<vwCategoryExpression> vwCategoryExpressions
		{
			get
			{
				return this.GetTable<vwCategoryExpression>();
			}
		}
		
		public System.Data.Linq.Table<vwHomeAccount> vwHomeAccounts
		{
			get
			{
				return this.GetTable<vwHomeAccount>();
			}
		}
		
		public System.Data.Linq.Table<vwBankAccount> vwBankAccounts
		{
			get
			{
				return this.GetTable<vwBankAccount>();
			}
		}
		
		public System.Data.Linq.Table<vwFlowVatPeriodTotal> vwFlowVatPeriodTotals
		{
			get
			{
				return this.GetTable<vwFlowVatPeriodTotal>();
			}
		}
		
		public System.Data.Linq.Table<vwFlowTaxType> vwFlowTaxTypes
		{
			get
			{
				return this.GetTable<vwFlowTaxType>();
			}
		}
		
		public System.Data.Linq.Table<vwFlowVatRecurrence> vwFlowVatRecurrences
		{
			get
			{
				return this.GetTable<vwFlowVatRecurrence>();
			}
		}
		
		public System.Data.Linq.Table<vwFlowVatRecurrenceAccrual> vwFlowVatRecurrenceAccruals
		{
			get
			{
				return this.GetTable<vwFlowVatRecurrenceAccrual>();
			}
		}
		
		public System.Data.Linq.Table<vwFlowVatPeriodAccrual> vwFlowVatPeriodAccruals
		{
			get
			{
				return this.GetTable<vwFlowVatPeriodAccrual>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="App.proc_EventLog")]
		public int proc_EventLog([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventMessage", DbType="NVarChar(MAX)")] string eventMessage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventTypeCode", DbType="SmallInt")] System.Nullable<short> eventTypeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LogCode", DbType="NVarChar(20)")] ref string logCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventMessage, eventTypeCode, logCode);
			logCode = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.fnFlowCategory", IsComposable=true)]
		public IQueryable<fnFlowCategoryResult> fnFlowCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashTypeCode", DbType="SmallInt")] System.Nullable<short> cashTypeCode)
		{
			return this.CreateMethodCallQuery<fnFlowCategoryResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cashTypeCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.fnFlowCategoryCashCodes", IsComposable=true)]
		public IQueryable<fnFlowCategoryCashCodesResult> fnFlowCategoryCashCodes([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryCode", DbType="NVarChar(10)")] string categoryCode)
		{
			return this.CreateMethodCallQuery<fnFlowCategoryCashCodesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.fnFlowCategoriesByType", IsComposable=true)]
		public IQueryable<fnFlowCategoriesByTypeResult> fnFlowCategoriesByType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashTypeCode", DbType="SmallInt")] System.Nullable<short> cashTypeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryTypeCode", DbType="SmallInt")] System.Nullable<short> categoryTypeCode)
		{
			return this.CreateMethodCallQuery<fnFlowCategoriesByTypeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cashTypeCode, categoryTypeCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.fnFlowCategoryTotalCodes", IsComposable=true)]
		public IQueryable<fnFlowCategoryTotalCodesResult> fnFlowCategoryTotalCodes([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryCode", DbType="NVarChar(10)")] string categoryCode)
		{
			return this.CreateMethodCallQuery<fnFlowCategoryTotalCodesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.proc_FlowCategoryCodeFromName")]
		public int proc_FlowCategoryCodeFromName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="NVarChar(50)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryCode", DbType="NVarChar(10)")] ref string categoryCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), category, categoryCode);
			categoryCode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.fnFlowBankBalances", IsComposable=true)]
		public IQueryable<fnFlowBankBalancesResult> fnFlowBankBalances([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashAccountCode", DbType="NVarChar(10)")] string cashAccountCode)
		{
			return this.CreateMethodCallQuery<fnFlowBankBalancesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cashAccountCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.fnFlowCashCodeValues", IsComposable=true)]
		public IQueryable<fnFlowCashCodeValuesResult> fnFlowCashCodeValues([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashCode", DbType="NVarChar(50)")] string cashCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="YearNumber", DbType="SmallInt")] System.Nullable<short> yearNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeActivePeriods", DbType="Bit")] System.Nullable<bool> includeActivePeriods, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeOrderBook", DbType="Bit")] System.Nullable<bool> includeOrderBook, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeTaxAccruals", DbType="Bit")] System.Nullable<bool> includeTaxAccruals)
		{
			return this.CreateMethodCallQuery<fnFlowCashCodeValuesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cashCode, yearNumber, includeActivePeriods, includeOrderBook, includeTaxAccruals);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Cash.proc_FlowCashCodeValues")]
		public ISingleResult<proc_FlowCashCodeValuesResult> proc_FlowCashCodeValues([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashCode", DbType="NVarChar(50)")] string cashCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="YearNumber", DbType="SmallInt")] System.Nullable<short> yearNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeActivePeriods", DbType="Bit")] System.Nullable<bool> includeActivePeriods, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeOrderBook", DbType="Bit")] System.Nullable<bool> includeOrderBook, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeTaxAccruals", DbType="Bit")] System.Nullable<bool> includeTaxAccruals)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cashCode, yearNumber, includeActivePeriods, includeOrderBook, includeTaxAccruals);
			return ((ISingleResult<proc_FlowCashCodeValuesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="App.vwActivePeriod")]
	public partial class vwActivePeriod
	{
		
		private short _YearNumber;
		
		private System.DateTime _StartOn;
		
		private string _Description;
		
		private short _MonthNumber;
		
		private string _MonthName;
		
		private System.Nullable<System.DateTime> _EndOn;
		
		public vwActivePeriod()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="SmallInt NOT NULL")]
		public short YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this._YearNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthNumber", DbType="SmallInt NOT NULL")]
		public short MonthNumber
		{
			get
			{
				return this._MonthNumber;
			}
			set
			{
				if ((this._MonthNumber != value))
				{
					this._MonthNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this._MonthName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndOn
		{
			get
			{
				return this._EndOn;
			}
			set
			{
				if ((this._EndOn != value))
				{
					this._EndOn = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="App.vwActiveYears")]
	public partial class vwActiveYear
	{
		
		private short _YearNumber;
		
		private string _Description;
		
		private string _CashStatus;
		
		public vwActiveYear()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="SmallInt NOT NULL")]
		public short YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this._YearNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashStatus", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string CashStatus
		{
			get
			{
				return this._CashStatus;
			}
			set
			{
				if ((this._CashStatus != value))
				{
					this._CashStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="App.vwMonths")]
	public partial class vwMonth
	{
		
		private System.Nullable<double> _StartOn;
		
		private string _MonthName;
		
		private short _MonthNumber;
		
		public vwMonth()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="Float")]
		public System.Nullable<double> StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this._MonthName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthNumber", DbType="SmallInt NOT NULL")]
		public short MonthNumber
		{
			get
			{
				return this._MonthNumber;
			}
			set
			{
				if ((this._MonthNumber != value))
				{
					this._MonthNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwCategoryTrade")]
	public partial class vwCategoryTrade
	{
		
		private string _CategoryCode;
		
		private string _Category;
		
		private short _CategoryTypeCode;
		
		private System.Nullable<short> _CashModeCode;
		
		private System.Nullable<short> _CashTypeCode;
		
		private short _DisplayOrder;
		
		private short _IsEnabled;
		
		private string _InsertedBy;
		
		private System.DateTime _InsertedOn;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdatedOn;
		
		private System.Data.Linq.Binary _RowVer;
		
		public vwCategoryTrade()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTypeCode", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short CategoryTypeCode
		{
			get
			{
				return this._CategoryTypeCode;
			}
			set
			{
				if ((this._CategoryTypeCode != value))
				{
					this._CategoryTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashModeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashModeCode
		{
			get
			{
				return this._CashModeCode;
			}
			set
			{
				if ((this._CashModeCode != value))
				{
					this._CashModeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTypeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashTypeCode
		{
			get
			{
				return this._CashTypeCode;
			}
			set
			{
				if ((this._CashTypeCode != value))
				{
					this._CashTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this._InsertedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this._InsertedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVer", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVer
		{
			get
			{
				return this._RowVer;
			}
			set
			{
				if ((this._RowVer != value))
				{
					this._RowVer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwCategoryBank")]
	public partial class vwCategoryBank
	{
		
		private string _CategoryCode;
		
		private string _Category;
		
		private short _CategoryTypeCode;
		
		private System.Nullable<short> _CashModeCode;
		
		private System.Nullable<short> _CashTypeCode;
		
		private short _DisplayOrder;
		
		private short _IsEnabled;
		
		private string _InsertedBy;
		
		private System.DateTime _InsertedOn;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdatedOn;
		
		private System.Data.Linq.Binary _RowVer;
		
		public vwCategoryBank()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTypeCode", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short CategoryTypeCode
		{
			get
			{
				return this._CategoryTypeCode;
			}
			set
			{
				if ((this._CategoryTypeCode != value))
				{
					this._CategoryTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashModeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashModeCode
		{
			get
			{
				return this._CashModeCode;
			}
			set
			{
				if ((this._CashModeCode != value))
				{
					this._CashModeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTypeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashTypeCode
		{
			get
			{
				return this._CashTypeCode;
			}
			set
			{
				if ((this._CashTypeCode != value))
				{
					this._CashTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this._InsertedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this._InsertedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVer", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVer
		{
			get
			{
				return this._RowVer;
			}
			set
			{
				if ((this._RowVer != value))
				{
					this._RowVer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwCategoryTax")]
	public partial class vwCategoryTax
	{
		
		private string _CategoryCode;
		
		private string _Category;
		
		private short _CategoryTypeCode;
		
		private System.Nullable<short> _CashModeCode;
		
		private System.Nullable<short> _CashTypeCode;
		
		private short _DisplayOrder;
		
		private short _IsEnabled;
		
		private string _InsertedBy;
		
		private System.DateTime _InsertedOn;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdatedOn;
		
		private System.Data.Linq.Binary _RowVer;
		
		public vwCategoryTax()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTypeCode", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short CategoryTypeCode
		{
			get
			{
				return this._CategoryTypeCode;
			}
			set
			{
				if ((this._CategoryTypeCode != value))
				{
					this._CategoryTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashModeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashModeCode
		{
			get
			{
				return this._CashModeCode;
			}
			set
			{
				if ((this._CashModeCode != value))
				{
					this._CashModeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTypeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashTypeCode
		{
			get
			{
				return this._CashTypeCode;
			}
			set
			{
				if ((this._CashTypeCode != value))
				{
					this._CashTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this._InsertedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this._InsertedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVer", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVer
		{
			get
			{
				return this._RowVer;
			}
			set
			{
				if ((this._RowVer != value))
				{
					this._RowVer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwCategoryTotals")]
	public partial class vwCategoryTotal
	{
		
		private string _CategoryCode;
		
		private string _Category;
		
		private short _CategoryTypeCode;
		
		private System.Nullable<short> _CashModeCode;
		
		private System.Nullable<short> _CashTypeCode;
		
		private short _DisplayOrder;
		
		private short _IsEnabled;
		
		private string _InsertedBy;
		
		private System.DateTime _InsertedOn;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdatedOn;
		
		private System.Data.Linq.Binary _RowVer;
		
		public vwCategoryTotal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTypeCode", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short CategoryTypeCode
		{
			get
			{
				return this._CategoryTypeCode;
			}
			set
			{
				if ((this._CategoryTypeCode != value))
				{
					this._CategoryTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashModeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashModeCode
		{
			get
			{
				return this._CashModeCode;
			}
			set
			{
				if ((this._CashModeCode != value))
				{
					this._CashModeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTypeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashTypeCode
		{
			get
			{
				return this._CashTypeCode;
			}
			set
			{
				if ((this._CashTypeCode != value))
				{
					this._CashTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this._InsertedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this._InsertedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVer", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVer
		{
			get
			{
				return this._RowVer;
			}
			set
			{
				if ((this._RowVer != value))
				{
					this._RowVer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwCategoryExpressions")]
	public partial class vwCategoryExpression
	{
		
		private short _DisplayOrder;
		
		private string _CategoryCode;
		
		private string _Category;
		
		private string _Expression;
		
		private string _Format;
		
		public vwCategoryExpression()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL")]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this._Expression = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					this._Format = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="App.vwHomeAccount")]
	public partial class vwHomeAccount
	{
		
		private string _AccountCode;
		
		private string _AccountName;
		
		public vwHomeAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwBankAccounts")]
	public partial class vwBankAccount
	{
		
		private string _CashAccountCode;
		
		private string _CashAccountName;
		
		private decimal _OpeningBalance;
		
		private int _DisplayOrder;
		
		public vwBankAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					this._CashAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CashAccountName
		{
			get
			{
				return this._CashAccountName;
			}
			set
			{
				if ((this._CashAccountName != value))
				{
					this._CashAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningBalance", DbType="Money NOT NULL")]
		public decimal OpeningBalance
		{
			get
			{
				return this._OpeningBalance;
			}
			set
			{
				if ((this._OpeningBalance != value))
				{
					this._OpeningBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwFlowVatPeriodTotals")]
	public partial class vwFlowVatPeriodTotal
	{
		
		private short _YearNumber;
		
		private System.DateTime _StartOn;
		
		private decimal _HomeSales;
		
		private decimal _HomePurchases;
		
		private decimal _ExportSales;
		
		private decimal _ExportPurchases;
		
		private decimal _HomeSalesVat;
		
		private decimal _HomePurchasesVat;
		
		private decimal _ExportSalesVat;
		
		private decimal _ExportPurchasesVat;
		
		private decimal _VatDue;
		
		public vwFlowVatPeriodTotal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="SmallInt NOT NULL")]
		public short YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this._YearNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSales", DbType="Money NOT NULL")]
		public decimal HomeSales
		{
			get
			{
				return this._HomeSales;
			}
			set
			{
				if ((this._HomeSales != value))
				{
					this._HomeSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchases", DbType="Money NOT NULL")]
		public decimal HomePurchases
		{
			get
			{
				return this._HomePurchases;
			}
			set
			{
				if ((this._HomePurchases != value))
				{
					this._HomePurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSales", DbType="Money NOT NULL")]
		public decimal ExportSales
		{
			get
			{
				return this._ExportSales;
			}
			set
			{
				if ((this._ExportSales != value))
				{
					this._ExportSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchases", DbType="Money NOT NULL")]
		public decimal ExportPurchases
		{
			get
			{
				return this._ExportPurchases;
			}
			set
			{
				if ((this._ExportPurchases != value))
				{
					this._ExportPurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSalesVat", DbType="Money NOT NULL")]
		public decimal HomeSalesVat
		{
			get
			{
				return this._HomeSalesVat;
			}
			set
			{
				if ((this._HomeSalesVat != value))
				{
					this._HomeSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchasesVat", DbType="Money NOT NULL")]
		public decimal HomePurchasesVat
		{
			get
			{
				return this._HomePurchasesVat;
			}
			set
			{
				if ((this._HomePurchasesVat != value))
				{
					this._HomePurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSalesVat", DbType="Money NOT NULL")]
		public decimal ExportSalesVat
		{
			get
			{
				return this._ExportSalesVat;
			}
			set
			{
				if ((this._ExportSalesVat != value))
				{
					this._ExportSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchasesVat", DbType="Money NOT NULL")]
		public decimal ExportPurchasesVat
		{
			get
			{
				return this._ExportPurchasesVat;
			}
			set
			{
				if ((this._ExportPurchasesVat != value))
				{
					this._ExportPurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatDue", DbType="Money NOT NULL")]
		public decimal VatDue
		{
			get
			{
				return this._VatDue;
			}
			set
			{
				if ((this._VatDue != value))
				{
					this._VatDue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwFlowTaxType")]
	public partial class vwFlowTaxType
	{
		
		private short _TaxTypeCode;
		
		private string _TaxType;
		
		private short _RecurrenceCode;
		
		private string _Recurrence;
		
		private string _CashCode;
		
		private string _CashDescription;
		
		private short _MonthNumber;
		
		private string _MonthName;
		
		private string _AccountCode;
		
		private short _OffsetDays;
		
		public vwFlowTaxType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxTypeCode", DbType="SmallInt NOT NULL")]
		public short TaxTypeCode
		{
			get
			{
				return this._TaxTypeCode;
			}
			set
			{
				if ((this._TaxTypeCode != value))
				{
					this._TaxTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this._TaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceCode", DbType="SmallInt NOT NULL")]
		public short RecurrenceCode
		{
			get
			{
				return this._RecurrenceCode;
			}
			set
			{
				if ((this._RecurrenceCode != value))
				{
					this._RecurrenceCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this._Recurrence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashCode", DbType="NVarChar(50)")]
		public string CashCode
		{
			get
			{
				return this._CashCode;
			}
			set
			{
				if ((this._CashCode != value))
				{
					this._CashCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CashDescription
		{
			get
			{
				return this._CashDescription;
			}
			set
			{
				if ((this._CashDescription != value))
				{
					this._CashDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthNumber", DbType="SmallInt NOT NULL")]
		public short MonthNumber
		{
			get
			{
				return this._MonthNumber;
			}
			set
			{
				if ((this._MonthNumber != value))
				{
					this._MonthNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this._MonthName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(10)")]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffsetDays", DbType="SmallInt NOT NULL")]
		public short OffsetDays
		{
			get
			{
				return this._OffsetDays;
			}
			set
			{
				if ((this._OffsetDays != value))
				{
					this._OffsetDays = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwFlowVatRecurrence")]
	public partial class vwFlowVatRecurrence
	{
		
		private short _YearNumber;
		
		private System.DateTime _StartOn;
		
		private decimal _HomeSales;
		
		private decimal _HomePurchases;
		
		private decimal _ExportSales;
		
		private decimal _ExportPurchases;
		
		private decimal _HomeSalesVat;
		
		private decimal _HomePurchasesVat;
		
		private decimal _ExportSalesVat;
		
		private decimal _ExportPurchasesVat;
		
		private decimal _VatAdjustment;
		
		private decimal _VatDue;
		
		public vwFlowVatRecurrence()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="SmallInt NOT NULL")]
		public short YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this._YearNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSales", DbType="Money NOT NULL")]
		public decimal HomeSales
		{
			get
			{
				return this._HomeSales;
			}
			set
			{
				if ((this._HomeSales != value))
				{
					this._HomeSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchases", DbType="Money NOT NULL")]
		public decimal HomePurchases
		{
			get
			{
				return this._HomePurchases;
			}
			set
			{
				if ((this._HomePurchases != value))
				{
					this._HomePurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSales", DbType="Money NOT NULL")]
		public decimal ExportSales
		{
			get
			{
				return this._ExportSales;
			}
			set
			{
				if ((this._ExportSales != value))
				{
					this._ExportSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchases", DbType="Money NOT NULL")]
		public decimal ExportPurchases
		{
			get
			{
				return this._ExportPurchases;
			}
			set
			{
				if ((this._ExportPurchases != value))
				{
					this._ExportPurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSalesVat", DbType="Money NOT NULL")]
		public decimal HomeSalesVat
		{
			get
			{
				return this._HomeSalesVat;
			}
			set
			{
				if ((this._HomeSalesVat != value))
				{
					this._HomeSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchasesVat", DbType="Money NOT NULL")]
		public decimal HomePurchasesVat
		{
			get
			{
				return this._HomePurchasesVat;
			}
			set
			{
				if ((this._HomePurchasesVat != value))
				{
					this._HomePurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSalesVat", DbType="Money NOT NULL")]
		public decimal ExportSalesVat
		{
			get
			{
				return this._ExportSalesVat;
			}
			set
			{
				if ((this._ExportSalesVat != value))
				{
					this._ExportSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchasesVat", DbType="Money NOT NULL")]
		public decimal ExportPurchasesVat
		{
			get
			{
				return this._ExportPurchasesVat;
			}
			set
			{
				if ((this._ExportPurchasesVat != value))
				{
					this._ExportPurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatAdjustment", DbType="Money NOT NULL")]
		public decimal VatAdjustment
		{
			get
			{
				return this._VatAdjustment;
			}
			set
			{
				if ((this._VatAdjustment != value))
				{
					this._VatAdjustment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatDue", DbType="Money NOT NULL")]
		public decimal VatDue
		{
			get
			{
				return this._VatDue;
			}
			set
			{
				if ((this._VatDue != value))
				{
					this._VatDue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwFlowVatRecurrenceAccruals")]
	public partial class vwFlowVatRecurrenceAccrual
	{
		
		private short _YearNumber;
		
		private System.DateTime _StartOn;
		
		private double _HomeSales;
		
		private double _HomePurchases;
		
		private double _ExportSales;
		
		private double _ExportPurchases;
		
		private double _HomeSalesVat;
		
		private double _HomePurchasesVat;
		
		private double _ExportSalesVat;
		
		private double _ExportPurchasesVat;
		
		private double _VatDue;
		
		public vwFlowVatRecurrenceAccrual()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="SmallInt NOT NULL")]
		public short YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this._YearNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSales", DbType="Float NOT NULL")]
		public double HomeSales
		{
			get
			{
				return this._HomeSales;
			}
			set
			{
				if ((this._HomeSales != value))
				{
					this._HomeSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchases", DbType="Float NOT NULL")]
		public double HomePurchases
		{
			get
			{
				return this._HomePurchases;
			}
			set
			{
				if ((this._HomePurchases != value))
				{
					this._HomePurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSales", DbType="Float NOT NULL")]
		public double ExportSales
		{
			get
			{
				return this._ExportSales;
			}
			set
			{
				if ((this._ExportSales != value))
				{
					this._ExportSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchases", DbType="Float NOT NULL")]
		public double ExportPurchases
		{
			get
			{
				return this._ExportPurchases;
			}
			set
			{
				if ((this._ExportPurchases != value))
				{
					this._ExportPurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSalesVat", DbType="Float NOT NULL")]
		public double HomeSalesVat
		{
			get
			{
				return this._HomeSalesVat;
			}
			set
			{
				if ((this._HomeSalesVat != value))
				{
					this._HomeSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchasesVat", DbType="Float NOT NULL")]
		public double HomePurchasesVat
		{
			get
			{
				return this._HomePurchasesVat;
			}
			set
			{
				if ((this._HomePurchasesVat != value))
				{
					this._HomePurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSalesVat", DbType="Float NOT NULL")]
		public double ExportSalesVat
		{
			get
			{
				return this._ExportSalesVat;
			}
			set
			{
				if ((this._ExportSalesVat != value))
				{
					this._ExportSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchasesVat", DbType="Float NOT NULL")]
		public double ExportPurchasesVat
		{
			get
			{
				return this._ExportPurchasesVat;
			}
			set
			{
				if ((this._ExportPurchasesVat != value))
				{
					this._ExportPurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatDue", DbType="Float NOT NULL")]
		public double VatDue
		{
			get
			{
				return this._VatDue;
			}
			set
			{
				if ((this._VatDue != value))
				{
					this._VatDue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cash.vwFlowVatPeriodAccruals")]
	public partial class vwFlowVatPeriodAccrual
	{
		
		private short _YearNumber;
		
		private System.DateTime _StartOn;
		
		private double _HomeSales;
		
		private double _HomePurchases;
		
		private double _ExportSales;
		
		private double _ExportPurchases;
		
		private double _HomeSalesVat;
		
		private double _HomePurchasesVat;
		
		private double _ExportSalesVat;
		
		private double _ExportPurchasesVat;
		
		private double _VatDue;
		
		public vwFlowVatPeriodAccrual()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="SmallInt NOT NULL")]
		public short YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this._YearNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSales", DbType="Float NOT NULL")]
		public double HomeSales
		{
			get
			{
				return this._HomeSales;
			}
			set
			{
				if ((this._HomeSales != value))
				{
					this._HomeSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchases", DbType="Float NOT NULL")]
		public double HomePurchases
		{
			get
			{
				return this._HomePurchases;
			}
			set
			{
				if ((this._HomePurchases != value))
				{
					this._HomePurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSales", DbType="Float NOT NULL")]
		public double ExportSales
		{
			get
			{
				return this._ExportSales;
			}
			set
			{
				if ((this._ExportSales != value))
				{
					this._ExportSales = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchases", DbType="Float NOT NULL")]
		public double ExportPurchases
		{
			get
			{
				return this._ExportPurchases;
			}
			set
			{
				if ((this._ExportPurchases != value))
				{
					this._ExportPurchases = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSalesVat", DbType="Float NOT NULL")]
		public double HomeSalesVat
		{
			get
			{
				return this._HomeSalesVat;
			}
			set
			{
				if ((this._HomeSalesVat != value))
				{
					this._HomeSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePurchasesVat", DbType="Float NOT NULL")]
		public double HomePurchasesVat
		{
			get
			{
				return this._HomePurchasesVat;
			}
			set
			{
				if ((this._HomePurchasesVat != value))
				{
					this._HomePurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportSalesVat", DbType="Float NOT NULL")]
		public double ExportSalesVat
		{
			get
			{
				return this._ExportSalesVat;
			}
			set
			{
				if ((this._ExportSalesVat != value))
				{
					this._ExportSalesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPurchasesVat", DbType="Float NOT NULL")]
		public double ExportPurchasesVat
		{
			get
			{
				return this._ExportPurchasesVat;
			}
			set
			{
				if ((this._ExportPurchasesVat != value))
				{
					this._ExportPurchasesVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatDue", DbType="Float NOT NULL")]
		public double VatDue
		{
			get
			{
				return this._VatDue;
			}
			set
			{
				if ((this._VatDue != value))
				{
					this._VatDue = value;
				}
			}
		}
	}
	
	public partial class fnFlowCategoryResult
	{
		
		private string _CategoryCode;
		
		private string _Category;
		
		private short _CategoryTypeCode;
		
		private System.Nullable<short> _CashModeCode;
		
		private System.Nullable<short> _CashTypeCode;
		
		private short _DisplayOrder;
		
		private short _IsEnabled;
		
		private string _InsertedBy;
		
		private System.DateTime _InsertedOn;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdatedOn;
		
		private System.Data.Linq.Binary _RowVer;
		
		public fnFlowCategoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTypeCode", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short CategoryTypeCode
		{
			get
			{
				return this._CategoryTypeCode;
			}
			set
			{
				if ((this._CategoryTypeCode != value))
				{
					this._CategoryTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashModeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashModeCode
		{
			get
			{
				return this._CashModeCode;
			}
			set
			{
				if ((this._CashModeCode != value))
				{
					this._CashModeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashTypeCode", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CashTypeCode
		{
			get
			{
				return this._CashTypeCode;
			}
			set
			{
				if ((this._CashTypeCode != value))
				{
					this._CashTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this._InsertedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this._InsertedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVer", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVer
		{
			get
			{
				return this._RowVer;
			}
			set
			{
				if ((this._RowVer != value))
				{
					this._RowVer = value;
				}
			}
		}
	}
	
	public partial class fnFlowCategoryCashCodesResult
	{
		
		private string _CashCode;
		
		private string _CashDescription;
		
		public fnFlowCategoryCashCodesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CashCode
		{
			get
			{
				return this._CashCode;
			}
			set
			{
				if ((this._CashCode != value))
				{
					this._CashCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CashDescription
		{
			get
			{
				return this._CashDescription;
			}
			set
			{
				if ((this._CashDescription != value))
				{
					this._CashDescription = value;
				}
			}
		}
	}
	
	public partial class fnFlowCategoriesByTypeResult
	{
		
		private short _DisplayOrder;
		
		private string _Category;
		
		private string _CashType;
		
		private string _CategoryCode;
		
		public fnFlowCategoriesByTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL")]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashType", DbType="NVarChar(25)")]
		public string CashType
		{
			get
			{
				return this._CashType;
			}
			set
			{
				if ((this._CashType != value))
				{
					this._CashType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
	}
	
	public partial class fnFlowCategoryTotalCodesResult
	{
		
		private string _CategoryCode;
		
		public fnFlowCategoryTotalCodesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this._CategoryCode = value;
				}
			}
		}
	}
	
	public partial class fnFlowBankBalancesResult
	{
		
		private string _CashAccountCode;
		
		private short _YearNumber;
		
		private System.DateTime _StartOn;
		
		private System.Nullable<decimal> _PaidBalance;
		
		public fnFlowBankBalancesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", DbType="NVarChar(10)")]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					this._CashAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="SmallInt NOT NULL")]
		public short YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this._YearNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidBalance", DbType="Money")]
		public System.Nullable<decimal> PaidBalance
		{
			get
			{
				return this._PaidBalance;
			}
			set
			{
				if ((this._PaidBalance != value))
				{
					this._PaidBalance = value;
				}
			}
		}
	}
	
	public partial class fnFlowCashCodeValuesResult
	{
		
		private System.Nullable<System.DateTime> _StartOn;
		
		private System.Nullable<decimal> _InvoiceValue;
		
		private System.Nullable<decimal> _InvoiceTax;
		
		private System.Nullable<decimal> _ForecastValue;
		
		private System.Nullable<decimal> _ForecastTax;
		
		public fnFlowCashCodeValuesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceValue", DbType="Money")]
		public System.Nullable<decimal> InvoiceValue
		{
			get
			{
				return this._InvoiceValue;
			}
			set
			{
				if ((this._InvoiceValue != value))
				{
					this._InvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTax", DbType="Money")]
		public System.Nullable<decimal> InvoiceTax
		{
			get
			{
				return this._InvoiceTax;
			}
			set
			{
				if ((this._InvoiceTax != value))
				{
					this._InvoiceTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastValue", DbType="Money")]
		public System.Nullable<decimal> ForecastValue
		{
			get
			{
				return this._ForecastValue;
			}
			set
			{
				if ((this._ForecastValue != value))
				{
					this._ForecastValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastTax", DbType="Money")]
		public System.Nullable<decimal> ForecastTax
		{
			get
			{
				return this._ForecastTax;
			}
			set
			{
				if ((this._ForecastTax != value))
				{
					this._ForecastTax = value;
				}
			}
		}
	}
	
	public partial class proc_FlowCashCodeValuesResult
	{
		
		private System.DateTime _StartOn;
		
		private decimal _InvoiceValue;
		
		private decimal _InvoiceTax;
		
		private decimal _ForecastValue;
		
		private decimal _ForecastTax;
		
		public proc_FlowCashCodeValuesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime NOT NULL")]
		public System.DateTime StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceValue", DbType="Money NOT NULL")]
		public decimal InvoiceValue
		{
			get
			{
				return this._InvoiceValue;
			}
			set
			{
				if ((this._InvoiceValue != value))
				{
					this._InvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTax", DbType="Money NOT NULL")]
		public decimal InvoiceTax
		{
			get
			{
				return this._InvoiceTax;
			}
			set
			{
				if ((this._InvoiceTax != value))
				{
					this._InvoiceTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastValue", DbType="Money NOT NULL")]
		public decimal ForecastValue
		{
			get
			{
				return this._ForecastValue;
			}
			set
			{
				if ((this._ForecastValue != value))
				{
					this._ForecastValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastTax", DbType="Money NOT NULL")]
		public decimal ForecastTax
		{
			get
			{
				return this._ForecastTax;
			}
			set
			{
				if ((this._ForecastTax != value))
				{
					this._ForecastTax = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
